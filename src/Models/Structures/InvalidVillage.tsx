/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import building_village from './building_village.glb'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_building_village: THREE.Mesh
    Mesh_building_village_1: THREE.Mesh
    Mesh_building: THREE.Mesh
    Mesh_building_1: THREE.Mesh
    Mesh_building_2: THREE.Mesh
    Mesh_building_3: THREE.Mesh
    Mesh_building_4: THREE.Mesh
    Mesh_building_5: THREE.Mesh
    chimney: THREE.Mesh
    fence: THREE.Mesh
    fence_1: THREE.Mesh
    Group: THREE.Mesh
    Group_1: THREE.Mesh
    Mesh_tree: THREE.Mesh
    Mesh_tree_1: THREE.Mesh
  }
  materials: {
    dirt: THREE.MeshStandardMaterial
    grass: THREE.MeshStandardMaterial
    roof: THREE.MeshStandardMaterial
    wood: THREE.MeshStandardMaterial
    stone: THREE.MeshStandardMaterial
    foliage: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(building_village) as GLTFResult
  const mat = React.useMemo(() => new THREE.MeshStandardMaterial({ color: 'red' }), [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-0.05, 0.2, -0.25]}>
        <lineSegments geometry={nodes.Mesh_building.geometry} material={mat} />
        <lineSegments geometry={nodes.Mesh_building_1.geometry} material={mat} />
        <lineSegments geometry={nodes.Mesh_building_2.geometry} material={mat} />
      </group>
      <group position={[0.03, 0.2, 0.22]} rotation={[0, Math.PI / 4, 0]}>
        <lineSegments geometry={nodes.Mesh_building_3.geometry} material={mat} />
        <lineSegments geometry={nodes.Mesh_building_4.geometry} material={mat} />
        <lineSegments geometry={nodes.Mesh_building_5.geometry} material={mat} />
      </group>
      <lineSegments
        geometry={nodes.chimney.geometry}
        material={mat}
        position={[-0.1, 0.2, 0.09]}
        rotation={[0, Math.PI / 4, 0]}
        scale={[1, 0.74, 1]}
      />
      <lineSegments
        geometry={nodes.fence.geometry}
        material={mat}
        position={[0.18, 0.2, -0.44]}
        rotation={[0, -Math.PI / 6, 0]}
      />
      <lineSegments
        geometry={nodes.fence_1.geometry}
        material={mat}
        position={[0.47, 0.2, 0.06]}
        rotation={[0, -Math.PI / 2, 0]}
      />
      <lineSegments
        geometry={nodes.Group.geometry}
        material={mat}
        position={[0.21, 0.2, -0.16]}
        rotation={[0, Math.PI / 6, 0]}
        scale={[0.74, 1, 0.74]}
      />
      <lineSegments
        geometry={nodes.Group_1.geometry}
        material={mat}
        position={[0.21, 0.2, 0.04]}
        scale={[0.74, 1, 0.74]}
      />
      <group position={[-0.29, 0.2, 0.09]} rotation={[0, -0.37, 0]}>
        <lineSegments geometry={nodes.Mesh_tree.geometry} material={mat} />
        <lineSegments geometry={nodes.Mesh_tree_1.geometry} material={mat} />

      </group>
      <group position={[0.35, 0.2, 0.22]} rotation={[0, -0.11, 0]} scale={[0.77, 0.77, 0.77]}>
        <lineSegments geometry={nodes.Mesh_tree.geometry} material={mat} />
        <lineSegments geometry={nodes.Mesh_tree_1.geometry} material={mat} />
      </group>
    </group>
  )
}

useGLTF.preload(building_village)
